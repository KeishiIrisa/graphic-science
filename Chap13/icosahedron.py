from myGLCanvas import MyGLCanvas, getArgs # myGLCanvasモジュールのimport
from polyhedron import Polyhedron        # polyhedronモジュールのimport

class Icosahedron(Polyhedron):                  # Icosahedronクラスの定義
  def __init__(self):                    # 初期化メソッド
    '''
    正二十面体を初期化する
    '''
    phi = (1 + 5**0.5) / 2


    vertices = [
      [1, phi, 0], [1, -phi, 0], [-1, phi, 0], [-1, -phi, 0],
      [0, 1, phi], [0, 1, -phi], [0, -1, phi], [0, -1, -phi],
      [phi, 0, 1], [phi, 0, -1], [-phi, 0, 1], [-phi, 0, -1]
,     ]

    faces = [
      (2, 4, 0), (2, 0, 5), (2, 5, 11), (2, 11, 10), (2, 10, 4),
      (4, 8, 0), (0, 8, 9), (9, 5, 0), (5, 9, 7), (7, 11, 5), (11, 7, 3), (3, 10, 11), (3, 6, 10), (6, 4, 10), (6, 8, 4),
      (1, 8, 6), (1, 9, 8), (1, 7, 9), (1, 3, 7), (1, 6, 3)
    ]

    edges = [
      (2, 4), (2, 0), (2, 5), (2, 11), (2, 10),
      (4, 0), (0, 5), (5, 11), (11, 10), (10, 4),
      (4, 8), (8, 0), (0, 9), (9, 5), (5, 7), (7, 11), (11, 3), (3, 10), (10, 6), (6, 4),
      (6, 8), (8, 9), (9, 7), (7, 3), (3, 6),
      (1, 8), (1, 9), (1, 7), (1, 3), (1, 6)
    ]

    colors = [
        (1, 0, 0), (0, 1, 0), (0, 0, 1), (1, 1, 0),
        (1, 0, 1), (0, 1, 1), (0.5, 0.5, 0), (0.5, 0, 0.5),
        (0, 0.5, 0.5), (0.5, 0.5, 0.5), (0.75, 0.25, 0.25), (0.25, 0.75, 0.75),
        (0.75, 0.75, 0), (0.75, 0, 0.75), (0, 0.75, 0.75), (0.25, 0.25, 0.75),
        (0.75, 0.25, 0), (0.25, 0, 0.75), (0.25, 0.75, 0.25), (0.75, 0.25, 0.75)
    ]

    super().__init__(vertices, faces, edges, colors)

def main():                              # main関数
  canvas = MyGLCanvas()                  # MyGLCanvasの作成
  dispObj = Icosahedron()                       # Icosahedronオブジェクトの作成
  canvas.init(dispObj)                   # OpenGLの初期化
  canvas.argsInit(getArgs())             # シェル引数/キーボード入力による文字列の取得
  canvas.loop()                          # コールバックメソッドの設定とループ起動

if __name__ == '__main__':               # 起動の確認 (コマンドラインからの起動)
  main()                                 # main関数の呼出
